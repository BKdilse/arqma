name: Depends Build

on: [push, pull_request]

env:
  APT_SET_CONF: |
    echo "Acquire::Retries \"3\";"         | sudo tee -a /etc/apt/apt.conf.d/80-custom
    echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    echo "Acquire::ftp::Timeout \"120\";"  | sudo tee -a /etc/apt/apt.conf.d/80-custom
  CCACHE_SETTINGS: |
    ccache --max-size=150M
    ccache --set-config=compression=true
jobs:
  Depends:
    runs-on: ubuntu-18.04
    env:
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - name: "ARM-v7-Ubuntu-1804"
            host: "arm-linux-gnueabihf"
            packages: "python3 gperf g++-arm-linux-gnueabihf"
          - name: "ARM-v8-Ubuntu-1804"
            host: "aarch64-linux-gnu"
            packages: "python3 gperf g++-aarch64-linux-gnu"
          - name: "ARM-v8-Pi-Ubuntu-1804"
            host: "aarch64-linux-gnu"
            packages: "python3 gperf g++-aarch64-linux-gnu"
            cmake_opts: "-DNO_AES=ON"
          - name: "Linux-x86_64-Ubuntu-1804"
            host: "x86_64-unknown-linux-gnu"
            packages: "gperf cmake python3-zmq libdbus-1-dev libharfbuzz-dev"
    name: ${{ matrix.toolchain.name }}
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Ccache
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-${{ matrix.toolchain.host }}-${{ github.sha }}
        restore-keys: ccache-${{ matrix.toolchain.host }}-
    - name: Depends cache
      uses: actions/cache@v2
      with:
        path: contrib/depends/built
        key: depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
        restore-keys: |
          depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
          depends-${{ matrix.toolchain.host }}-
    - name: Set apt Conf
      run: |
        ${{env.APT_SET_CONF}}
    - name: Install GNTL Dependencies
      run: |
        sudo apt update; sudo apt -y install build-essential libtool cmake autotools-dev automake pkg-config bsdmainutils curl git imagemagick libcap-dev librsvg2-bin libz-dev libtiff-tools python3-setuptools ca-certificates ccache ${{ matrix.toolchain.packages }}
    - name: Build
      run: |
        ${{env.CCACHE_SETTINGS}}
        make depends target=${{ matrix.toolchain.host }} cmake_opts=${{ matrix.toolchain.cmake_opts }} -j2
    - name: Tar binaries
      run: |
        cd build/${{ matrix.toolchain.host }}/release/bin/
        tar -czvf ${{ matrix.toolchain.name }}.tar.gz *
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.toolchain.name }}.tar.gz
        path: build/${{ matrix.toolchain.host }}/release/bin/${{ matrix.toolchain.name }}.tar.gz
